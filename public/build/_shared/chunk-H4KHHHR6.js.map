{
  "version": 3,
  "sources": ["../../../app/routes/FormComponent.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/FormComponent.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/FormComponent.jsx\");\n  import.meta.hot.lastModified = \"1697423237726.2185\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport { useLoaderData } from \"@remix-run/react\";\nconst FormComponent = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [toggleState, setToggleState] = useState(false);\n  const storeIdData = useLoaderData();\n  const storeId = storeIdData.storeId;\n  return <Form className=\"form-container\" method=\"POST\">\n      <div className=\"form-group\">\n        <label htmlFor=\"inputField\" className=\"form-label\">\n          Input Product Limit:\n        </label>\n        <input type=\"number\" id=\"inputField\" className=\"form-input\" name=\"inputValue\" value={inputValue} onChange={e => setInputValue(e.target.value)} />\n        <input type=\"hidden\" id=\"storeIdField\" name=\"storeIds\" value={storeId} />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"form-label\">Toggle Switch:</label>\n        <label className=\"toggle-switch\">\n          <input type=\"checkbox\" className=\"toggle-switch-input\" name=\"toggleState\" checked={toggleState || false} onChange={e => setToggleState(e.target.checked)} />\n          <span className=\"toggle-slider\"></span>\n        </label>\n      </div>\n      <button type=\"submit\" className=\"form-button\">\n        Save\n      </button>\n    </Form>;\n};\n_s(FormComponent, \"1DrZAYmizKrbGVF7Wo77/lwFdXU=\", false, function () {\n  return [useLoaderData];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAYA;AASA,mBAAgC;AAChC;AACA;AASQ;AA/BR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,gBAAgB,MAAM;AAC1B,KAAG;AACH,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,EAAE;AAC/C,QAAM,CAAC,aAAa,cAAc,QAAI,uBAAS,KAAK;AACpD,QAAM,cAAc,cAAc;AAClC,QAAM,UAAU,YAAY;AAC5B,SAAO,mDAAC,QAAK,WAAU,kBAAiB,QAAO,QAC3C;AAAA,uDAAC,SAAI,WAAU,cACb;AAAA,yDAAC,WAAM,SAAQ,cAAa,WAAU,cAAa,oCAAnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAM,MAAK,UAAS,IAAG,cAAa,WAAU,cAAa,MAAK,cAAa,OAAO,YAAY,UAAU,OAAK,cAAc,EAAE,OAAO,KAAK,KAA5I;AAAA;AAAA;AAAA;AAAA,aAA+I;AAAA,MAC/I,mDAAC,WAAM,MAAK,UAAS,IAAG,gBAAe,MAAK,YAAW,OAAO,WAA9D;AAAA;AAAA;AAAA;AAAA,aAAuE;AAAA,SALzE;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,SAAI,WAAU,cACb;AAAA,yDAAC,WAAM,WAAU,cAAa,8BAA9B;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,MAC5C,mDAAC,WAAM,WAAU,iBACf;AAAA,2DAAC,WAAM,MAAK,YAAW,WAAU,uBAAsB,MAAK,eAAc,SAAS,eAAe,OAAO,UAAU,OAAK,eAAe,EAAE,OAAO,OAAO,KAAvJ;AAAA;AAAA;AAAA;AAAA,eAA0J;AAAA,QAC1J,mDAAC,UAAK,WAAU,mBAAhB;AAAA;AAAA;AAAA;AAAA,eAAgC;AAAA,WAFlC;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,YAAO,MAAK,UAAS,WAAU,eAAc,oBAA9C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAjBG;AAAA;AAAA;AAAA;AAAA,SAkBL;AACJ;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,wBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
