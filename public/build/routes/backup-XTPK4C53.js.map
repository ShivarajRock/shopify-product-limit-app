{
  "version": 3,
  "sources": ["../../../app/routes/backup.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/backup.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/backup.jsx\");\n  import.meta.hot.lastModified = \"1697416212947.7732\";\n}\n// REMIX HMR END\n\nimport FormComponent from \"./FormComponent\";\nimport { json } from \"@remix-run/node\";\nimport { authenticate } from \"../shopify.server\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nconst metafieldFieldDetails = {\n  namespace: \"product_limit_app_number\",\n  key: \"product_limit_number\"\n};\n\n// export async function loader({ request }) {\n//   const { admin } = await authenticate.admin(request);\n//   const response = await admin.graphql(\n//     `{\n//         shop {\n//           id\n//           metafield(namespace: \"${metafieldFieldDetails.namespace}\",key: \"${metafieldFieldDetails.key}\") {\n//             value\n//           }\n//         }\n//       }`\n//   );\n//   const responseJson = await response.json();\n//   const shopData = responseJson.data.shop.id;\n//   console.log(\"shopData1\");\n//   console.log(shopData);\n//   return json({\n//     shopData,\n//   });\n// }\n//const shopifyStoreID = useLoaderData();\n\n//metafield updation function\nexport async function action({\n  request\n}) {\n  const body = new URLSearchParams(await request.text());\n  const inputValue = body.get(\"inputValue\");\n  const {\n    admin\n  } = await authenticate.admin(request);\n  console.log(\"shopData3\");\n  console.log(inputValue);\n  const shopifyStoreID = \"gid://shopify/Shop/82674385172\";\n  const dynamicValue = inputValue || \"15\";\n  const response = await admin.graphql(`mutation MetafieldsSet($metafields: [MetafieldsSetInput!]!) {\n        metafieldsSet(metafields: $metafields) {\n          metafields {\n            key\n            namespace\n            value\n            createdAt\n            updatedAt\n          }\n          userErrors {\n            field\n            message\n            code\n          }\n        }\n      }`, {\n    variables: {\n      metafields: [{\n        namespace: \"product_limit_app_number\",\n        key: \"product_limit_number\",\n        ownerId: shopifyStoreID,\n        type: \"number_integer\",\n        value: dynamicValue\n      }]\n    }\n  });\n  const responseJson = await response.json();\n  const metafieldValue = responseJson.data.metafieldsSet.metafields.value;\n  return json({\n    metafieldValue\n  });\n}\nexport default function SetProductLimitData() {\n  _s();\n  const metaValue = useActionData();\n  useEffect(() => {\n    if (metaValue) {\n      shopify.toast.show(\"Changes Saved!\", metaValue);\n    }\n  }, [metaValue]);\n  return <FormComponent />;\n}\n_s(SetProductLimitData, \"EQTWOP4Pab402mj7FGYeHOJqCZQ=\", false, function () {\n  return [useActionData];\n});\n_c = SetProductLimitData;\nvar _c;\n$RefreshReg$(_c, \"SetProductLimitData\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AAUA,kBAAqB;AACrB,qBAA6B;AAC7B;AACA,IAAAA,gBAAoC;AAiF3B;AAzGT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAgFe,SAAR,sBAAuC;AAC5C,KAAG;AACH,QAAM,YAAY,cAAc;AAChC,+BAAU,MAAM;AACd,QAAI,WAAW;AACb,cAAQ,MAAM,KAAK,kBAAkB,SAAS;AAAA,IAChD;AAAA,EACF,GAAG,CAAC,SAAS,CAAC;AACd,SAAO,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,SAAe;AACxB;AACA,GAAG,qBAAqB,gCAAgC,OAAO,WAAY;AACzE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
